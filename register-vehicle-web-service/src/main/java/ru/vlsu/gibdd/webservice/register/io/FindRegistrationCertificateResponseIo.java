//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7-b41 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.04.25 at 09:34:17 PM MSK 
//


package ru.vlsu.gibdd.webservice.register.io;

import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;
import ru.vlsu.gibdd.webservice.common.io.AbstractIo;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;all>
 *         &lt;element name="result" type="{http://www.w3.org/2001/XMLSchema}boolean"/>
 *         &lt;element name="registration_certificate" type="{http://vlsu.ru/schema/registration}RegistrationCertificate"/>
 *       &lt;/all>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {

})
@XmlRootElement(name = "FindRegistrationCertificateResponse")
public class FindRegistrationCertificateResponseIo
    extends AbstractIo
    implements Serializable, Equals, HashCode, ToString
{

    @XmlElement(namespace = "")
    protected boolean result;
    @XmlElement(name = "registration_certificate", namespace = "", required = true, nillable = true)
    protected RegistrationCertificateIo registrationCertificate;

    /**
     * Gets the value of the result property.
     * 
     */
    public boolean isResult() {
        return result;
    }

    /**
     * Sets the value of the result property.
     * 
     */
    public void setResult(boolean value) {
        this.result = value;
    }

    /**
     * Gets the value of the registrationCertificate property.
     * 
     * @return
     *     possible object is
     *     {@link RegistrationCertificateIo }
     *     
     */
    public RegistrationCertificateIo getRegistrationCertificate() {
        return registrationCertificate;
    }

    /**
     * Sets the value of the registrationCertificate property.
     * 
     * @param value
     *     allowed object is
     *     {@link RegistrationCertificateIo }
     *     
     */
    public void setRegistrationCertificate(RegistrationCertificateIo value) {
        this.registrationCertificate = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof FindRegistrationCertificateResponseIo)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final FindRegistrationCertificateResponseIo that = ((FindRegistrationCertificateResponseIo) object);
        {
            boolean lhsResult;
            lhsResult = (true?this.isResult():false);
            boolean rhsResult;
            rhsResult = (true?that.isResult():false);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "result", lhsResult), LocatorUtils.property(thatLocator, "result", rhsResult), lhsResult, rhsResult)) {
                return false;
            }
        }
        {
            RegistrationCertificateIo lhsRegistrationCertificate;
            lhsRegistrationCertificate = this.getRegistrationCertificate();
            RegistrationCertificateIo rhsRegistrationCertificate;
            rhsRegistrationCertificate = that.getRegistrationCertificate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "registrationCertificate", lhsRegistrationCertificate), LocatorUtils.property(thatLocator, "registrationCertificate", rhsRegistrationCertificate), lhsRegistrationCertificate, rhsRegistrationCertificate)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            boolean theResult;
            theResult = (true?this.isResult():false);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "result", theResult), currentHashCode, theResult);
        }
        {
            RegistrationCertificateIo theRegistrationCertificate;
            theRegistrationCertificate = this.getRegistrationCertificate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "registrationCertificate", theRegistrationCertificate), currentHashCode, theRegistrationCertificate);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            boolean theResult;
            theResult = (true?this.isResult():false);
            strategy.appendField(locator, this, "result", buffer, theResult);
        }
        {
            RegistrationCertificateIo theRegistrationCertificate;
            theRegistrationCertificate = this.getRegistrationCertificate();
            strategy.appendField(locator, this, "registrationCertificate", buffer, theRegistrationCertificate);
        }
        return buffer;
    }

}
